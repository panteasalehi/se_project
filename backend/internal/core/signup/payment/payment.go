// Code generated by gowsdl DO NOT EDIT.

package payment

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type BpVerifyRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpVerifyRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	SaleOrderId int64 `xml:"saleOrderId,omitempty" json:"saleOrderId,omitempty"`

	SaleReferenceId int64 `xml:"saleReferenceId,omitempty" json:"saleReferenceId,omitempty"`
}

type BpVerifyRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpVerifyRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpRefundInquiryRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpRefundInquiryRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	RefundOrderId int64 `xml:"refundOrderId,omitempty" json:"refundOrderId,omitempty"`

	RefundReferenceId int64 `xml:"refundReferenceId,omitempty" json:"refundReferenceId,omitempty"`
}

type BpRefundInquiryRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpRefundInquiryRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpRefundVerifyRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpRefundVerifyRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	RefundOrderId int64 `xml:"refundOrderId,omitempty" json:"refundOrderId,omitempty"`

	RefundReferenceId int64 `xml:"refundReferenceId,omitempty" json:"refundReferenceId,omitempty"`
}

type BpRefundVerifyRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpRefundVerifyRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpSettleRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpSettleRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	SaleOrderId int64 `xml:"saleOrderId,omitempty" json:"saleOrderId,omitempty"`

	SaleReferenceId int64 `xml:"saleReferenceId,omitempty" json:"saleReferenceId,omitempty"`
}

type BpSettleRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpSettleRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpDynamicPayRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpDynamicPayRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	Amount int64 `xml:"amount,omitempty" json:"amount,omitempty"`

	LocalDate string `xml:"localDate,omitempty" json:"localDate,omitempty"`

	LocalTime string `xml:"localTime,omitempty" json:"localTime,omitempty"`

	AdditionalData string `xml:"additionalData,omitempty" json:"additionalData,omitempty"`

	CallBackUrl string `xml:"callBackUrl,omitempty" json:"callBackUrl,omitempty"`

	PayerId int64 `xml:"payerId,omitempty" json:"payerId,omitempty"`

	SubServiceId int64 `xml:"subServiceId,omitempty" json:"subServiceId,omitempty"`
}

type BpDynamicPayRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpDynamicPayRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpVirtualPayRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpVirtualPayRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	Amount int64 `xml:"amount,omitempty" json:"amount,omitempty"`

	LocalDate string `xml:"localDate,omitempty" json:"localDate,omitempty"`

	LocalTime string `xml:"localTime,omitempty" json:"localTime,omitempty"`

	AdditionalData string `xml:"additionalData,omitempty" json:"additionalData,omitempty"`

	CallBackUrl string `xml:"callBackUrl,omitempty" json:"callBackUrl,omitempty"`

	PayerId int64 `xml:"payerId,omitempty" json:"payerId,omitempty"`
}

type BpVirtualPayRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpVirtualPayRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpReversalRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpReversalRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	SaleOrderId int64 `xml:"saleOrderId,omitempty" json:"saleOrderId,omitempty"`

	SaleReferenceId int64 `xml:"saleReferenceId,omitempty" json:"saleReferenceId,omitempty"`
}

type BpReversalRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpReversalRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpCumulativeDynamicPayRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpCumulativeDynamicPayRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	Amount int64 `xml:"amount,omitempty" json:"amount,omitempty"`

	LocalDate string `xml:"localDate,omitempty" json:"localDate,omitempty"`

	LocalTime string `xml:"localTime,omitempty" json:"localTime,omitempty"`

	AdditionalData string `xml:"additionalData,omitempty" json:"additionalData,omitempty"`

	CallBackUrl string `xml:"callBackUrl,omitempty" json:"callBackUrl,omitempty"`
}

type BpCumulativeDynamicPayRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpCumulativeDynamicPayRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpPayRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpPayRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	Amount int64 `xml:"amount,omitempty" json:"amount,omitempty"`

	LocalDate string `xml:"localDate,omitempty" json:"localDate,omitempty"`

	LocalTime string `xml:"localTime,omitempty" json:"localTime,omitempty"`

	AdditionalData string `xml:"additionalData,omitempty" json:"additionalData,omitempty"`

	CallBackUrl string `xml:"callBackUrl,omitempty" json:"callBackUrl,omitempty"`

	PayerId int64 `xml:"payerId,omitempty" json:"payerId,omitempty"`
}

type BpPayRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpPayRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpSaleReferenceIdRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpSaleReferenceIdRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	SaleOrderId int64 `xml:"saleOrderId,omitempty" json:"saleOrderId,omitempty"`
}

type BpSaleReferenceIdRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpSaleReferenceIdRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpChargePayRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpChargePayRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	Amount int64 `xml:"amount,omitempty" json:"amount,omitempty"`

	LocalDate string `xml:"localDate,omitempty" json:"localDate,omitempty"`

	LocalTime string `xml:"localTime,omitempty" json:"localTime,omitempty"`

	AdditionalData string `xml:"additionalData,omitempty" json:"additionalData,omitempty"`

	CallBackUrl string `xml:"callBackUrl,omitempty" json:"callBackUrl,omitempty"`

	PayerId int64 `xml:"payerId,omitempty" json:"payerId,omitempty"`
}

type BpChargePayRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpChargePayRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpInquiryRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpInquiryRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	SaleOrderId int64 `xml:"saleOrderId,omitempty" json:"saleOrderId,omitempty"`

	SaleReferenceId int64 `xml:"saleReferenceId,omitempty" json:"saleReferenceId,omitempty"`
}

type BpInquiryRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpInquiryRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type BpRefundRequest struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpRefundRequest"`

	TerminalId int64 `xml:"terminalId,omitempty" json:"terminalId,omitempty"`

	UserName string `xml:"userName,omitempty" json:"userName,omitempty"`

	UserPassword string `xml:"userPassword,omitempty" json:"userPassword,omitempty"`

	OrderId int64 `xml:"orderId,omitempty" json:"orderId,omitempty"`

	SaleOrderId int64 `xml:"saleOrderId,omitempty" json:"saleOrderId,omitempty"`

	SaleReferenceId int64 `xml:"saleReferenceId,omitempty" json:"saleReferenceId,omitempty"`

	RefundAmount int64 `xml:"refundAmount,omitempty" json:"refundAmount,omitempty"`
}

type BpRefundRequestResponse struct {
	XMLName xml.Name `xml:"http://interfaces.core.sw.bps.com/ bpRefundRequestResponse"`

	Return_ string `xml:"return,omitempty" json:"return,omitempty"`
}

type IPaymentGateway interface {
	BpVerifyRequest(request *BpVerifyRequest) (*BpVerifyRequestResponse, error)

	BpVerifyRequestContext(ctx context.Context, request *BpVerifyRequest) (*BpVerifyRequestResponse, error)

	BpRefundInquiryRequest(request *BpRefundInquiryRequest) (*BpRefundInquiryRequestResponse, error)

	BpRefundInquiryRequestContext(ctx context.Context, request *BpRefundInquiryRequest) (*BpRefundInquiryRequestResponse, error)

	BpRefundVerifyRequest(request *BpRefundVerifyRequest) (*BpRefundVerifyRequestResponse, error)

	BpRefundVerifyRequestContext(ctx context.Context, request *BpRefundVerifyRequest) (*BpRefundVerifyRequestResponse, error)

	BpSettleRequest(request *BpSettleRequest) (*BpSettleRequestResponse, error)

	BpSettleRequestContext(ctx context.Context, request *BpSettleRequest) (*BpSettleRequestResponse, error)

	BpDynamicPayRequest(request *BpDynamicPayRequest) (*BpDynamicPayRequestResponse, error)

	BpDynamicPayRequestContext(ctx context.Context, request *BpDynamicPayRequest) (*BpDynamicPayRequestResponse, error)

	BpVirtualPayRequest(request *BpVirtualPayRequest) (*BpVirtualPayRequestResponse, error)

	BpVirtualPayRequestContext(ctx context.Context, request *BpVirtualPayRequest) (*BpVirtualPayRequestResponse, error)

	BpReversalRequest(request *BpReversalRequest) (*BpReversalRequestResponse, error)

	BpReversalRequestContext(ctx context.Context, request *BpReversalRequest) (*BpReversalRequestResponse, error)

	BpCumulativeDynamicPayRequest(request *BpCumulativeDynamicPayRequest) (*BpCumulativeDynamicPayRequestResponse, error)

	BpCumulativeDynamicPayRequestContext(ctx context.Context, request *BpCumulativeDynamicPayRequest) (*BpCumulativeDynamicPayRequestResponse, error)

	BpPayRequest(request *BpPayRequest) (*BpPayRequestResponse, error)

	BpPayRequestContext(ctx context.Context, request *BpPayRequest) (*BpPayRequestResponse, error)

	BpSaleReferenceIdRequest(request *BpSaleReferenceIdRequest) (*BpSaleReferenceIdRequestResponse, error)

	BpSaleReferenceIdRequestContext(ctx context.Context, request *BpSaleReferenceIdRequest) (*BpSaleReferenceIdRequestResponse, error)

	BpChargePayRequest(request *BpChargePayRequest) (*BpChargePayRequestResponse, error)

	BpChargePayRequestContext(ctx context.Context, request *BpChargePayRequest) (*BpChargePayRequestResponse, error)

	BpInquiryRequest(request *BpInquiryRequest) (*BpInquiryRequestResponse, error)

	BpInquiryRequestContext(ctx context.Context, request *BpInquiryRequest) (*BpInquiryRequestResponse, error)

	BpRefundRequest(request *BpRefundRequest) (*BpRefundRequestResponse, error)

	BpRefundRequestContext(ctx context.Context, request *BpRefundRequest) (*BpRefundRequestResponse, error)
}

type iPaymentGateway struct {
	client *soap.Client
}

func NewIPaymentGateway(client *soap.Client) IPaymentGateway {
	return &iPaymentGateway{
		client: client,
	}
}

func (service *iPaymentGateway) BpVerifyRequestContext(ctx context.Context, request *BpVerifyRequest) (*BpVerifyRequestResponse, error) {
	response := new(BpVerifyRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpVerifyRequest(request *BpVerifyRequest) (*BpVerifyRequestResponse, error) {
	return service.BpVerifyRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpRefundInquiryRequestContext(ctx context.Context, request *BpRefundInquiryRequest) (*BpRefundInquiryRequestResponse, error) {
	response := new(BpRefundInquiryRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpRefundInquiryRequest(request *BpRefundInquiryRequest) (*BpRefundInquiryRequestResponse, error) {
	return service.BpRefundInquiryRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpRefundVerifyRequestContext(ctx context.Context, request *BpRefundVerifyRequest) (*BpRefundVerifyRequestResponse, error) {
	response := new(BpRefundVerifyRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpRefundVerifyRequest(request *BpRefundVerifyRequest) (*BpRefundVerifyRequestResponse, error) {
	return service.BpRefundVerifyRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpSettleRequestContext(ctx context.Context, request *BpSettleRequest) (*BpSettleRequestResponse, error) {
	response := new(BpSettleRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpSettleRequest(request *BpSettleRequest) (*BpSettleRequestResponse, error) {
	return service.BpSettleRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpDynamicPayRequestContext(ctx context.Context, request *BpDynamicPayRequest) (*BpDynamicPayRequestResponse, error) {
	response := new(BpDynamicPayRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpDynamicPayRequest(request *BpDynamicPayRequest) (*BpDynamicPayRequestResponse, error) {
	return service.BpDynamicPayRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpVirtualPayRequestContext(ctx context.Context, request *BpVirtualPayRequest) (*BpVirtualPayRequestResponse, error) {
	response := new(BpVirtualPayRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpVirtualPayRequest(request *BpVirtualPayRequest) (*BpVirtualPayRequestResponse, error) {
	return service.BpVirtualPayRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpReversalRequestContext(ctx context.Context, request *BpReversalRequest) (*BpReversalRequestResponse, error) {
	response := new(BpReversalRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpReversalRequest(request *BpReversalRequest) (*BpReversalRequestResponse, error) {
	return service.BpReversalRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpCumulativeDynamicPayRequestContext(ctx context.Context, request *BpCumulativeDynamicPayRequest) (*BpCumulativeDynamicPayRequestResponse, error) {
	response := new(BpCumulativeDynamicPayRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpCumulativeDynamicPayRequest(request *BpCumulativeDynamicPayRequest) (*BpCumulativeDynamicPayRequestResponse, error) {
	return service.BpCumulativeDynamicPayRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpPayRequestContext(ctx context.Context, request *BpPayRequest) (*BpPayRequestResponse, error) {
	response := new(BpPayRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpPayRequest(request *BpPayRequest) (*BpPayRequestResponse, error) {
	return service.BpPayRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpSaleReferenceIdRequestContext(ctx context.Context, request *BpSaleReferenceIdRequest) (*BpSaleReferenceIdRequestResponse, error) {
	response := new(BpSaleReferenceIdRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpSaleReferenceIdRequest(request *BpSaleReferenceIdRequest) (*BpSaleReferenceIdRequestResponse, error) {
	return service.BpSaleReferenceIdRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpChargePayRequestContext(ctx context.Context, request *BpChargePayRequest) (*BpChargePayRequestResponse, error) {
	response := new(BpChargePayRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpChargePayRequest(request *BpChargePayRequest) (*BpChargePayRequestResponse, error) {
	return service.BpChargePayRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpInquiryRequestContext(ctx context.Context, request *BpInquiryRequest) (*BpInquiryRequestResponse, error) {
	response := new(BpInquiryRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpInquiryRequest(request *BpInquiryRequest) (*BpInquiryRequestResponse, error) {
	return service.BpInquiryRequestContext(
		context.Background(),
		request,
	)
}

func (service *iPaymentGateway) BpRefundRequestContext(ctx context.Context, request *BpRefundRequest) (*BpRefundRequestResponse, error) {
	response := new(BpRefundRequestResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *iPaymentGateway) BpRefundRequest(request *BpRefundRequest) (*BpRefundRequestResponse, error) {
	return service.BpRefundRequestContext(
		context.Background(),
		request,
	)
}
